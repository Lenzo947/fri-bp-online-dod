@inject NavigationManager NavigationManager
@inject LazyAssemblyLoader LazyLoader
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using System.Reflection 

<CascadingAuthenticationState>
    <CascadingBlazoredModal>
        <Router AppAssembly="@typeof(Program).Assembly" OnNavigateAsync="OnNavigateAsync" AdditionalAssemblies="lazyLoadedAssemblies">
            <Found Context="routeData">
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                    <Authorizing>
                        <div class="d-flex justify-content-center align-items-center">
                            <h1>Overujem identitu...</h1>
                        </div>
                    </Authorizing>
                </AuthorizeRouteView>
            </Found>
            <NotFound>
                <CascadingAuthenticationState>
                    @{
                        // redirect to home page if not found
                        NavigationManager.NavigateTo("");
                    }
                </CascadingAuthenticationState>
            </NotFound>
        </Router>
    </CascadingBlazoredModal>
</CascadingAuthenticationState>

@code {

    private List<Assembly> lazyLoadedAssemblies = new List<Assembly>();

    private async Task OnNavigateAsync(NavigationContext args)
    {
        if (args.Path.EndsWith("online-chat"))
        {
            var assemblies = await LazyLoader.LoadAssembliesAsync(new List<string>
            {
                "MimeTypesMap.dll"
            });

            lazyLoadedAssemblies.AddRange(assemblies);
        }
    }
}