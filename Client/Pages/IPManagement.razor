@page "/ip-management"
@attribute [Authorize]
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<div class="btn btn-warning mb-4" @onclick="NavigateToHome">Naspäť</div>

<h1>Blokované IP adresy</h1>

<hr class="mb-4" />

<EditForm Model="BlockedIPModel" OnValidSubmit="Add">
    <DataAnnotationsValidator />

    <label for="title">Blokovať IP adresu</label>

    <InputText @bind-Value="BlockedIPModel.Address" class="form-control mb-2" id="title" placeholder="Adresa..." rows="1"
                   oninput="this.style.height = 'auto'; this.style.height = (this.scrollHeight) + 'px';"></InputText>

    <div class="mb-2">
        <ValidationSummary />
    </div>

    <div class="mb-5">
        <button type="submit" class="btn btn-primary"><span class="oi oi-plus mr-2"></span>Pridať</button>
    </div>
</EditForm>

@if (BlockedIPs != null) // wait for all messages to load first
{
    <table class="table table-sm table-hover table-bordered table-responsive my-5">
        <thead class="thead-light text-center">
            <tr>
                <th scope="col" class="align-middle p70">Adresa</th>
                <th scope="col" class="align-middle">Správa</th>
            </tr>
        </thead>
        <tbody class="text-center">
            @foreach (BlockedIP ip in BlockedIPs.Reverse())
            {
               <BlockedIPRow ip="@ip" />
            }
        </tbody>
    </table>
}
else
{
    <SpinnerBig Classes="text-warning mb-4" />
}



@code {

    protected BlockedIP BlockedIPModel { get; set; } = new BlockedIP();

    public virtual ICollection<BlockedIP> BlockedIPs { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    protected async Task Load()
    {
        BlockedIPs = await httpClient.GetFromJsonAsync<ICollection<BlockedIP>>("https://localhost:44317/api/blocked-ips");
    }

    protected async Task Add()
    {
        var payload = new { Address = BlockedIPModel.Address };

        var response = await httpClient.PostAsJsonAsync("https://localhost:44317/api/blocked-ips", payload);

        if (response.IsSuccessStatusCode)
        {
            ClearFields();

            await Load();
        }
    }

    protected void ClearFields()
    {
        BlockedIPModel.Address = null;
    }

    private void NavigateToHome()
    {
        navigationManager.NavigateTo("");
    }
}
