@page "/online-chat"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h1>Online deň otvorených dverí</h1>
<p>
    Pridávanie otázok a reakcií je <b>otvorené</b>.
</p>

<hr class="mb-4" />

<EditForm Model="MessageModel" OnValidSubmit="Add">
    <DataAnnotationsValidator />

    <label for="title">Nová správa</label>

    <InputTextArea @bind-Value="MessageModel.Text"
                    class="form-control mb-2"
                    id="title"
                    placeholder="Správa..."
                    rows="5"
                    oninput="this.style.height = 'auto'; this.style.height = (this.scrollHeight) + 'px';"></InputTextArea>

    <div class="mb-2">
        <ValidationSummary />
    </div>

    <div class="mb-5">
        <button type="submit" class="btn btn-primary"><span class="oi oi-envelope-closed mr-2"></span>Odoslať</button>
    </div>
</EditForm>

@if (Messages != null) // wait for all messages to load first
{
    foreach (Message msg in Messages.Reverse()) 
    {
        <MessageCard msg="@msg" Classes="mb-4"/>  
    }
}

@code {

    protected Message MessageModel { get; set; } = new Message();

    public virtual ICollection<Message> Messages { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    protected async Task Load()
    {
        Messages = await httpClient.GetFromJsonAsync<ICollection<Message>>("http://localhost:4080/api/messages");
    }

    public async Task Add()
    {
        var payload = new { Text = MessageModel.Text, ThumbsUpCount = new Random().Next(0, 100) };

        var response = await httpClient.PostAsJsonAsync("http://localhost:4080/api/messages", payload);

        if (response.IsSuccessStatusCode)
        {
            ClearFields();

            await Load();
        }
    }

    protected void ClearFields()
    {
        MessageModel.Text = null;
    }
}
