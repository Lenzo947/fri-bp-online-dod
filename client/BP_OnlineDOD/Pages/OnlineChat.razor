@using System.Net.Http
@using Message
@page "/online-chat"
@inject HttpClient httpClient
@inject NavigationManager navigationManager

<h1>Správa</h1>

<textarea class="form-control mb-2" form="commentForm" rows="3" @bind="TextToSend"></textarea>

<form @onsubmit="Submit" class="mb-4" id="commentForm">
    <button type="submit" class="btn btn-primary">Odoslať</button>
</form>




@if (Messages != null)
{
    foreach (Message msg in Messages.Reverse())
    {
        <div class="card mb-4">
            <div class="card-body p-3">
                <h5 class="card-title">Anonym</h5>
                <div class="card-subtitle mb-2">
                    <div class="badge badge-info px-2 py-1">
                        <span class="oi oi-thumb-up"></span>
                        @msg.ThumbsUpCount
                    </div>
                    <div class="badge badge-secondary px-2 py-1">@msg.TimeSent.ToLocalTime().ToString("dd.MM. yyyy HH:mm:ss")</div>
                    <small class="text-muted">ID správy: @msg.Id</small>
                </div>
                <p class="card-text p-2">@msg.Text</p>
            </div>
        </div>
    }
}


@code {
    public virtual string TextToSend { get; set; }

    public virtual IEnumerable<Message> Messages { get; set; }

    public async Task Submit(EventArgs eventArgs)
    {
        var payload = new { Text = TextToSend, ThumbsUpCount = new Random().Next(0, 100) };

        var response = await httpClient.PostAsJsonAsync("https://localhost:44317/api/messages", payload);

        if (response.IsSuccessStatusCode)
        {
            var message = await response.Content.ReadFromJsonAsync<Message>();

            navigationManager.NavigateTo("online-chat", true);
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Messages = await httpClient.GetFromJsonAsync<IEnumerable<Message>>("https://localhost:44317/api/messages");
    }
}
